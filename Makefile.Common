CC = g++
CFLAGS = -Wall -std=c++11
SRC_DIR = src
BUILD_DIR = build

# List of source files
SRCS = $(wildcard $(SRC_DIR)/*.cpp)

# Generate a list of object files from source files
OBJS = $(patsubst $(SRC_DIR)/%.cpp,$(BUILD_DIR)/%.o,$(SRCS))

# The final executable name
TARGET = out

# Default target
all: $(TARGET)

# Rule to build the executable
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $^ -o $@

# Rule to compile each source file into object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp | $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Create the build directory
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Clean up
clean:
	rm -rf $(BUILD_DIR)/*.o $(TARGET)

# Help target
help:
	@echo "Usage: make [target]"
	@echo ""
	@echo "Targets:"
	@echo "  all        : Build the executable (default target)"
	@echo "  clean      : Remove object files and the executable"
	@echo "  help       : Display this help message"

# PHONY targets to avoid conflicts with file names
.PHONY: all clean help
